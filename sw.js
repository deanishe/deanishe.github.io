const cacheName='deanishe-d3ccbb76c28f',precacheFiles=["/apple-touch-icon.png","/favicon.ico","/images/deanishe-128.png","/images/deanishe-256.png","/images/dot.png","/images/icons.svg","/images/pinboard.svg","/images/post.svg","/js/alabastard.min.3a1c9ffbae3b2277bda3e0a49c8b4c4d5dfa0d91b03416ab9adc638a21812fdc.js","/js/highlight.min.414483aa55cce7e7d39d68e83603c9f96cbf4e0501f401514a3a6f947d6b63ce.js","/js/jquery-3.5.1.min.f7f6a5894f1d19ddad6fa392b2ece2c5e578cbf7da4ea805b6885eb6985b6e3d.js","/js/jquery.expander.min.1368f66231634afff2f32e548f2212edc5b995bf1c68566955b37681010653b6.js","/js/weather.min.2d7976c6ee5638df97ef46787dc387b1b1800ce4ce31e5392c920a02504bfdc1.js","/style/alabastard.12ca74473277f09d7a1bcc16642f596e07764af5281e9e7141168b653c848067.css","/style/highlightjs.85f07d647f1a956ced2cfa6d9d4c203dccd24c8a34c6b0cce8fe42bdec079320.css","/style/weather.56bbf2440673bcde2c646a1218b9a96dedf8c483a03863a1b2cf92c9c9bf59b6.css"];self.addEventListener('install',function(event){console.debug('[worker] installing ...');event.waitUntil(preCache());self.skipWaiting();console.debug('[worker] installed');});self.addEventListener('fetch',function(event){if(event.request.method!=='GET')return;var url=new URL(event.request.url);if(url.hostname!=='www.deanishe.net'){return;}
if(url.search){return;}
if(url.pathname.match(/\/js\/.+\.js$/)||url.pathname.match(/\/style\/.+\.css$/)){event.respondWith(preferCache(event.request));return;}
if(url.pathname.match(/\/$/)||url.pathname.match(/\.(map|png|ico|jpg|jpeg|gif|svg|xml|eot|woff|woff2)$/)){event.respondWith(fromCache(event.request).then(function(response){console.debug(`[worker] cache > ${event.request.url}`);event.waitUntil(update(event.request));console.debug(`[worker] cache < ${event.request.url}`);return response;}).catch(function(){console.debug(`[worker] network > ${event.request.url}`);console.debug(`[worker] cache < ${event.request.url}`);return update(event.request);}));return;}
event.respondWith(preferNetwork(event.request));});self.addEventListener('activate',function(event){console.debug('[worker] activating ...');event.waitUntil(caches.keys().then(function(keys){return Promise.all(keys.filter(function(key){return key!==cacheName;}).map(function(key){console.debug(`[worker] deleting cache ${key} ...`);return caches.delete(key);}));}).then(self.clients.claim()).then(function(){console.log('[worker] activated');}));});function preCache(){return caches.open(cacheName).then(function(cache){return cache.addAll(precacheFiles);});}
function fromCache(request){return caches.open(cacheName).then(function(cache){return cache.match(request).then(function(response){return response||Promise.reject('cache miss');});});}
function update(request){return fetch(request).then(function(response){caches.open(cacheName).then(function(cache){cache.put(request,response);});return response.clone();});}
function preferCache(request){return fromCache(request).then(function(response){console.debug(`[worker] cache > ${request.url}`);return response;}).catch(function(){console.debug(`[worker] network > ${request.url}`);console.debug(`[worker] cache < ${request.url}`);return update(request);});}
function preferNetwork(request){return update(request).then(function(response){console.debug(`[worker] network > ${request.url}`);console.debug(`[worker] cache < ${request.url}`);return response;}).catch(function(){console.debug(`[worker] cache > ${request.url}`);return fromCache(request);});}